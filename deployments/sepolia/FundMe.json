{
  "address": "0x4FFE58aC963B950AD8aE612ee135304EE0E64659",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x1bcfcae0d46d44389385ba6c162330d9bf8d94f9abbc696685276ebc904f9f4f",
  "receipt": {
    "to": null,
    "from": "0x7B85A65ae33da5436e6950dF506D51C1729e7878",
    "contractAddress": "0x4FFE58aC963B950AD8aE612ee135304EE0E64659",
    "transactionIndex": 10,
    "gasUsed": "876861",
    "logsBloom": "0x
    "blockHash": "0xf9a6e177212dde802f607e6332c2208d747406c213b5abf15af8e04904de12d2",
    "transactionHash": "0x1bcfcae0d46d44389385ba6c162330d9bf8d94f9abbc696685276ebc904f9f4f",
    "logs": [],
    "blockNumber": 6616539,
    "cumulativeGasUsed": "2631634",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x694AA1769357215DE4FAC081bf1f309aDC325306"
  ],
  "numDeployments": 1,
  "solcInputHash": "9261213194dbd9217666500dcf761f50",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// Get funds from users\\n// Withdraw funds\\n// Set a minimum funding value in usd\\n\\n// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256; \\n\\n    uint256 public MINIMUM_USD = 50 * 1e18;\\n\\n    address[] public funders;\\n    mapping(address => uint256) public addressToAmountFunded;\\n\\n    address public immutable i_owner;\\n\\n    AggregatorV3Interface public priceFeed;\\n\\n    // It get called immediately you deployed the contract\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable  {\\n        // Want to be able to strore minimum fund amount in USD\\n        require(msg.value.getConversionRate(priceFeed) > 1e18, \\\"Didn't send enough \\\"); // 1e18 = 1 * 10 ** 18\\n        funders.push(msg.sender);\\n        addressToAmountFunded[msg.sender] = msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (uint256 funderIndex = 0; funderIndex < funders.length; funderIndex++) {\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        // resetting the funders array to have a BRAND NEW ADDRESS with 0 object in it\\n        funders = new address[](0);\\n        // Withdraw Funds\\n\\n        // transfer\\n        // payable (msg.sender).transfer(address(this).balance);\\n        // send\\n        // bool sendSuccess = payable (msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable (msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"call failed\\\");\\n    }\\n\\n    modifier onlyOwner {\\n        // require(msg.sender == i_owner, \\\"Sender is not the owner\\\");\\n        if (msg.sender != i_owner) { revert NotOwner(); }\\n        _;\\n    }\\n\\n    receive() external payable { \\n        fund();\\n    }\\n\\n    fallback() external payable { \\n        fund();\\n    }\\n}\",\"keccak256\":\"0x2641292bcbbb55df5f795d32d23d0f0fdc44d8bde033bd12fb1e262ed62bd64e\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// NOTE: Library can have any state variable and can also send ether.\\nlibrary PriceConverter {\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns(uint256) {\\n        (,int price,,,) = priceFeed.latestRoundData();\\n        // ETH in terms of USD\\n        return uint256(price * 1e18);\\n    }\\n\\n    function getVersion() internal view returns (uint256) {\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(0x694AA1769357215DE4FAC081bf1f309aDC325306);\\n        return priceFeed.version();\\n    }\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n        return  ethAmountInUsd;\\n    }\\n}\",\"keccak256\":\"0xa3a6ea3274cff08e1425bded7b028340af507ce4303b37513d0fbaf2f7cef00a\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040526802b5e3af16b188000060005534801561001d57600080fd5b50604051610f85380380610f85833981810160405281019061003f9190610120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061014d565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100ed826100c2565b9050919050565b6100fd816100e2565b811461010857600080fd5b50565b60008151905061011a816100f4565b92915050565b600060208284031215610136576101356100bd565b5b60006101448482850161010b565b91505092915050565b60805160601c610e13610172600039600081816102d201526105570152610e136000f3fe6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102d0565b005b3480156100b057600080fd5b506100cb60048036038101906100c691906107a1565b610511565b6040516100d891906107e7565b60405180910390f35b3480156100ed57600080fd5b506100f6610529565b60405161010391906107e7565b60405180910390f35b34801561011857600080fd5b5061012161052f565b60405161012e9190610861565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b50610156610555565b604051610163919061088b565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906108d2565b610579565b6040516101a0919061088b565b60405180910390f35b670de0b6b3a76400006101e7600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105b890919063ffffffff16565b11610227576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021e9061095c565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610355576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104015760006001828154811061037b5761037a61097c565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103f9906109da565b915050610358565b50600067ffffffffffffffff81111561041d5761041c610a23565b5b60405190808252806020026020018201604052801561044b5781602001602082028036833780820191505090505b5060019080519060200190610461929190610697565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161048890610a83565b60006040518083038185875af1925050503d80600081146104c5576040519150601f19603f3d011682016040523d82523d6000602084013e6104ca565b606091505b505090508061050e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050590610ae4565b60405180910390fd5b50565b60026020528060005260406000206000915090505481565b60005481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001818154811061058957600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105c4836105f4565b90506000670de0b6b3a764000085836105dd9190610b04565b6105e79190610b8d565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561063d57600080fd5b505afa158015610651573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106759190610c4b565b505050915050670de0b6b3a76400008161068f9190610cc6565b915050919050565b828054828255906000526020600020908101928215610710579160200282015b8281111561070f5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106b7565b5b50905061071d9190610721565b5090565b5b8082111561073a576000816000905550600101610722565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061076e82610743565b9050919050565b61077e81610763565b811461078957600080fd5b50565b60008135905061079b81610775565b92915050565b6000602082840312156107b7576107b661073e565b5b60006107c58482850161078c565b91505092915050565b6000819050919050565b6107e1816107ce565b82525050565b60006020820190506107fc60008301846107d8565b92915050565b6000819050919050565b600061082761082261081d84610743565b610802565b610743565b9050919050565b60006108398261080c565b9050919050565b600061084b8261082e565b9050919050565b61085b81610840565b82525050565b60006020820190506108766000830184610852565b92915050565b61088581610763565b82525050565b60006020820190506108a0600083018461087c565b92915050565b6108af816107ce565b81146108ba57600080fd5b50565b6000813590506108cc816108a6565b92915050565b6000602082840312156108e8576108e761073e565b5b60006108f6848285016108bd565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567682000000000000000000000000000600082015250565b60006109466013836108ff565b915061095182610910565b602082019050919050565b6000602082019050818103600083015261097581610939565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109e5826107ce565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a1857610a176109ab565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a6d600083610a52565b9150610a7882610a5d565b600082019050919050565b6000610a8e82610a60565b9150819050919050565b7f63616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610ace600b836108ff565b9150610ad982610a98565b602082019050919050565b60006020820190508181036000830152610afd81610ac1565b9050919050565b6000610b0f826107ce565b9150610b1a836107ce565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b5357610b526109ab565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b98826107ce565b9150610ba3836107ce565b925082610bb357610bb2610b5e565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610bdd81610bbe565b8114610be857600080fd5b50565b600081519050610bfa81610bd4565b92915050565b6000819050919050565b610c1381610c00565b8114610c1e57600080fd5b50565b600081519050610c3081610c0a565b92915050565b600081519050610c45816108a6565b92915050565b600080600080600060a08688031215610c6757610c6661073e565b5b6000610c7588828901610beb565b9550506020610c8688828901610c21565b9450506040610c9788828901610c36565b9350506060610ca888828901610c36565b9250506080610cb988828901610beb565b9150509295509295909350565b6000610cd182610c00565b9150610cdc83610c00565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d1b57610d1a6109ab565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d5857610d576109ab565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610d9557610d946109ab565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610dd257610dd16109ab565b5b82820290509291505056fea264697066735822122094ae9eb2c719e49bbb63d7b3f4564c6e27fa2548a7ff3469e9e6e37b9c9e23ca64736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102d0565b005b3480156100b057600080fd5b506100cb60048036038101906100c691906107a1565b610511565b6040516100d891906107e7565b60405180910390f35b3480156100ed57600080fd5b506100f6610529565b60405161010391906107e7565b60405180910390f35b34801561011857600080fd5b5061012161052f565b60405161012e9190610861565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b50610156610555565b604051610163919061088b565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906108d2565b610579565b6040516101a0919061088b565b60405180910390f35b670de0b6b3a76400006101e7600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105b890919063ffffffff16565b11610227576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021e9061095c565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610355576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104015760006001828154811061037b5761037a61097c565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103f9906109da565b915050610358565b50600067ffffffffffffffff81111561041d5761041c610a23565b5b60405190808252806020026020018201604052801561044b5781602001602082028036833780820191505090505b5060019080519060200190610461929190610697565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161048890610a83565b60006040518083038185875af1925050503d80600081146104c5576040519150601f19603f3d011682016040523d82523d6000602084013e6104ca565b606091505b505090508061050e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050590610ae4565b60405180910390fd5b50565b60026020528060005260406000206000915090505481565b60005481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001818154811061058957600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105c4836105f4565b90506000670de0b6b3a764000085836105dd9190610b04565b6105e79190610b8d565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561063d57600080fd5b505afa158015610651573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106759190610c4b565b505050915050670de0b6b3a76400008161068f9190610cc6565b915050919050565b828054828255906000526020600020908101928215610710579160200282015b8281111561070f5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106b7565b5b50905061071d9190610721565b5090565b5b8082111561073a576000816000905550600101610722565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061076e82610743565b9050919050565b61077e81610763565b811461078957600080fd5b50565b60008135905061079b81610775565b92915050565b6000602082840312156107b7576107b661073e565b5b60006107c58482850161078c565b91505092915050565b6000819050919050565b6107e1816107ce565b82525050565b60006020820190506107fc60008301846107d8565b92915050565b6000819050919050565b600061082761082261081d84610743565b610802565b610743565b9050919050565b60006108398261080c565b9050919050565b600061084b8261082e565b9050919050565b61085b81610840565b82525050565b60006020820190506108766000830184610852565b92915050565b61088581610763565b82525050565b60006020820190506108a0600083018461087c565b92915050565b6108af816107ce565b81146108ba57600080fd5b50565b6000813590506108cc816108a6565b92915050565b6000602082840312156108e8576108e761073e565b5b60006108f6848285016108bd565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567682000000000000000000000000000600082015250565b60006109466013836108ff565b915061095182610910565b602082019050919050565b6000602082019050818103600083015261097581610939565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109e5826107ce565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a1857610a176109ab565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a6d600083610a52565b9150610a7882610a5d565b600082019050919050565b6000610a8e82610a60565b9150819050919050565b7f63616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610ace600b836108ff565b9150610ad982610a98565b602082019050919050565b60006020820190508181036000830152610afd81610ac1565b9050919050565b6000610b0f826107ce565b9150610b1a836107ce565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b5357610b526109ab565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b98826107ce565b9150610ba3836107ce565b925082610bb357610bb2610b5e565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610bdd81610bbe565b8114610be857600080fd5b50565b600081519050610bfa81610bd4565b92915050565b6000819050919050565b610c1381610c00565b8114610c1e57600080fd5b50565b600081519050610c3081610c0a565b92915050565b600081519050610c45816108a6565b92915050565b600080600080600060a08688031215610c6757610c6661073e565b5b6000610c7588828901610beb565b9550506020610c8688828901610c21565b9450506040610c9788828901610c36565b9350506060610ca888828901610c36565b9250506080610cb988828901610beb565b9150509295509295909350565b6000610cd182610c00565b9150610cdc83610c00565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d1b57610d1a6109ab565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d5857610d576109ab565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610d9557610d946109ab565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610dd257610dd16109ab565b5b82820290509291505056fea264697066735822122094ae9eb2c719e49bbb63d7b3f4564c6e27fa2548a7ff3469e9e6e37b9c9e23ca64736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "MINIMUM_USD",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 65,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 70,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}