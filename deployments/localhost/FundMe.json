{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "fundingAddress",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "s_addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xb0a1206ced13604296e766df19d697dd7082315482976ec2ed308047bf5de361",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1182592",
    "logsBloom": "0x
    "blockHash": "0xd7b4243cefb0d8d4d2aec1ba95ab10c7eb5f7dc092309882394686cb90c1bfaa",
    "transactionHash": "0xb0a1206ced13604296e766df19d697dd7082315482976ec2ed308047bf5de361",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1182592",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "3a6f65ec1f3c8cba44579a227c397367",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundingAddress\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"jopaleti\",\"details\":\"This implements price feed as our library\",\"kind\":\"dev\",\"methods\":{\"fund()\":{\"details\":\"This implements price feeds as our library\"},\"getAddressToAmountFunded(address)\":{\"params\":{\"fundingAddress\":\"the address of the funder\"},\"returns\":{\"_0\":\"the amount funded\"}}},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"This function funds this contract\"},\"getAddressToAmountFunded(address)\":{\"notice\":\"Gets the amount that an address has funded\"}},\"notice\":\"This contract is to demo a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// Pragma\\npragma solidity ^0.8.8;\\n// Imports\\nimport \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n// Error Codes\\nerror FundMe__NotOwner();\\n\\n// Interfaces, Library, Contracts\\n/**\\n * @title A contract for crowd funding\\n * @author jopaleti\\n * @notice This contract is to demo a sample funding contract\\n * @dev This implements price feed as our library\\n */\\ncontract FundMe {\\n    // Type declarations\\n    using PriceConverter for uint256;\\n\\n    uint256 public MINIMUM_USD = 50 * 1e18;\\n    // state variables!\\n    address[] public s_funders;\\n    mapping(address => uint256) public s_addressToAmountFunded;\\n\\n    address public immutable i_owner;\\n\\n    AggregatorV3Interface public s_priceFeed;\\n\\n    // It get called immediately you deployed the contract\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    /**\\n     * @notice This function funds this contract\\n     * @dev This implements price feeds as our library\\n     */\\n    function fund() public payable {\\n        // Want to be able to strore minimum fund amount in USD\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) > 1e18,\\n            \\\"Didn't send enough \\\"\\n        ); // 1e18 = 1 * 10 ** 18\\n        s_funders.push(msg.sender);\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        // resetting the funders array to have a BRAND NEW ADDRESS with 0 object in it\\n        s_funders = new address[](0);\\n        // Withdraw Funds\\n\\n        // transfer\\n        // payable (msg.sender).transfer(address(this).balance);\\n        // send\\n        // bool sendSuccess = payable (msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"call failed\\\");\\n    }\\n\\n    // CHEAPER WITHDRAW\\n    function cheaperWithdraw() public payable onlyOwner {\\n        address[] memory funders = s_funders;\\n        // Mapping cant be in memory, sorry!\\n        for (uint256 funderIndex = 0; funderIndex < funders.length; funderIndex++) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success);\\n    }\\n\\n    modifier onlyOwner() {\\n        // require(msg.sender == i_owner, \\\"Sender is not the owner\\\");\\n        if (msg.sender != i_owner) {\\n            revert FundMe__NotOwner();\\n        }\\n        _;\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n     /** @notice Gets the amount that an address has funded\\n     *  @param fundingAddress the address of the funder\\n     *  @return the amount funded\\n     */\\n    function getAddressToAmountFunded(address fundingAddress)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        return s_addressToAmountFunded[fundingAddress];\\n    }\\n     function getFunder(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n    function getBalance(address addr) public view returns (uint256) {\\n        return s_addressToAmountFunded[addr];\\n    }\\n}\\n\",\"keccak256\":\"0x726c6f0867b3577f3348381f26286ebf7c354f252ea1a611329d597d5b856996\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// NOTE: Library can have any state variable and can also send ether.\\nlibrary PriceConverter {\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns(uint256) {\\n        (,int price,,,) = priceFeed.latestRoundData();\\n        // ETH in terms of USD\\n        return uint256(price * 1e18);\\n    }\\n\\n    function getVersion() internal view returns (uint256) {\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(0x694AA1769357215DE4FAC081bf1f309aDC325306);\\n        return priceFeed.version();\\n    }\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n        return  ethAmountInUsd;\\n    }\\n}\",\"keccak256\":\"0xa3a6ea3274cff08e1425bded7b028340af507ce4303b37513d0fbaf2f7cef00a\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040526802b5e3af16b18800006000553480156200001e57600080fd5b50604051620015393803806200153983398181016040528101906200004491906200012d565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200015f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000f582620000c8565b9050919050565b6200010781620000e8565b81146200011357600080fd5b50565b6000815190506200012781620000fc565b92915050565b600060208284031215620001465762000145620000c3565b5b6000620001568482850162000116565b91505092915050565b60805160601c61139f6200019a600039600081816104d40152818161075c015281816107ac015281816109a30152610a83015261139f6000f3fe6080604052600436106100c65760003560e01c8063893d20e81161007f578063be2693f011610059578063be2693f014610263578063d7b4750c1461026d578063dba6335f146102aa578063f8b2cb4f146102d5576100d5565b8063893d20e8146102035780639e87a5cd1461022e578063b60d428814610259576100d5565b80630343fb25146100df5780630ec3b0271461011c5780631bf6132d146101475780633ccfd60b1461018457806354861af71461019b5780636b69a592146101d8576100d5565b366100d5576100d3610312565b005b6100dd610312565b005b3480156100eb57600080fd5b5061010660048036038101906101019190610cd7565b61044b565b6040516101139190610d1d565b60405180910390f35b34801561012857600080fd5b50610131610494565b60405161013e9190610d97565b60405180910390f35b34801561015357600080fd5b5061016e60048036038101906101699190610cd7565b6104ba565b60405161017b9190610d1d565b60405180910390f35b34801561019057600080fd5b506101996104d2565b005b3480156101a757600080fd5b506101c260048036038101906101bd9190610dde565b610713565b6040516101cf9190610e1a565b60405180910390f35b3480156101e457600080fd5b506101ed610752565b6040516101fa9190610d1d565b60405180910390f35b34801561020f57600080fd5b50610218610758565b6040516102259190610e1a565b60405180910390f35b34801561023a57600080fd5b50610243610780565b6040516102509190610d97565b60405180910390f35b610261610312565b005b61026b6107aa565b005b34801561027957600080fd5b50610294600480360381019061028f9190610dde565b610a39565b6040516102a19190610e1a565b60405180910390f35b3480156102b657600080fd5b506102bf610a81565b6040516102cc9190610e1a565b60405180910390f35b3480156102e157600080fd5b506102fc60048036038101906102f79190610cd7565b610aa5565b6040516103099190610d1d565b60405180910390f35b670de0b6b3a7640000610350600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1634610aee90919063ffffffff16565b11610390576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038790610e92565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104429190610ee1565b92505081905550565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610557576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156106035760006001828154811061057d5761057c610f37565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806105fb90610f66565b91505061055a565b50600067ffffffffffffffff81111561061f5761061e610faf565b5b60405190808252806020026020018201604052801561064d5781602001602082028036833780820191505090505b5060019080519060200190610663929190610bcd565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161068a9061100f565b60006040518083038185875af1925050503d80600081146106c7576040519150601f19603f3d011682016040523d82523d6000602084013e6106cc565b606091505b5050905080610710576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070790611070565b60405180910390fd5b50565b6001818154811061072357600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60005481565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461082f576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156108b357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610869575b5050505050905060005b815181101561093e5760008282815181106108db576108da610f37565b5b602002602001015190506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061093690610f66565b9150506108bd565b50600067ffffffffffffffff81111561095a57610959610faf565b5b6040519080825280602002602001820160405280156109885781602001602082028036833780820191505090505b506001908051906020019061099e929190610bcd565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516109e59061100f565b60006040518083038185875af1925050503d8060008114610a22576040519150601f19603f3d011682016040523d82523d6000602084013e610a27565b606091505b5050905080610a3557600080fd5b5050565b600060018281548110610a4f57610a4e610f37565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600080610afa83610b2a565b90506000670de0b6b3a76400008583610b139190611090565b610b1d9190611119565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610b7357600080fd5b505afa158015610b87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bab91906111d7565b505050915050670de0b6b3a764000081610bc59190611252565b915050919050565b828054828255906000526020600020908101928215610c46579160200282015b82811115610c455782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610bed565b5b509050610c539190610c57565b5090565b5b80821115610c70576000816000905550600101610c58565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ca482610c79565b9050919050565b610cb481610c99565b8114610cbf57600080fd5b50565b600081359050610cd181610cab565b92915050565b600060208284031215610ced57610cec610c74565b5b6000610cfb84828501610cc2565b91505092915050565b6000819050919050565b610d1781610d04565b82525050565b6000602082019050610d326000830184610d0e565b92915050565b6000819050919050565b6000610d5d610d58610d5384610c79565b610d38565b610c79565b9050919050565b6000610d6f82610d42565b9050919050565b6000610d8182610d64565b9050919050565b610d9181610d76565b82525050565b6000602082019050610dac6000830184610d88565b92915050565b610dbb81610d04565b8114610dc657600080fd5b50565b600081359050610dd881610db2565b92915050565b600060208284031215610df457610df3610c74565b5b6000610e0284828501610dc9565b91505092915050565b610e1481610c99565b82525050565b6000602082019050610e2f6000830184610e0b565b92915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567682000000000000000000000000000600082015250565b6000610e7c601383610e35565b9150610e8782610e46565b602082019050919050565b60006020820190508181036000830152610eab81610e6f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610eec82610d04565b9150610ef783610d04565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610f2c57610f2b610eb2565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610f7182610d04565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610fa457610fa3610eb2565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610ff9600083610fde565b915061100482610fe9565b600082019050919050565b600061101a82610fec565b9150819050919050565b7f63616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b600061105a600b83610e35565b915061106582611024565b602082019050919050565b600060208201905081810360008301526110898161104d565b9050919050565b600061109b82610d04565b91506110a683610d04565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156110df576110de610eb2565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061112482610d04565b915061112f83610d04565b92508261113f5761113e6110ea565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b6111698161114a565b811461117457600080fd5b50565b60008151905061118681611160565b92915050565b6000819050919050565b61119f8161118c565b81146111aa57600080fd5b50565b6000815190506111bc81611196565b92915050565b6000815190506111d181610db2565b92915050565b600080600080600060a086880312156111f3576111f2610c74565b5b600061120188828901611177565b9550506020611212888289016111ad565b9450506040611223888289016111c2565b9350506060611234888289016111c2565b925050608061124588828901611177565b9150509295509295909350565b600061125d8261118c565b91506112688361118c565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156112a7576112a6610eb2565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156112e4576112e3610eb2565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561132157611320610eb2565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561135e5761135d610eb2565b5b82820290509291505056fea2646970667358221220a53e0c122a3218b7c04a815e7b21523afcdb69d852adbddbf6a16fbda20ab3c764736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100c65760003560e01c8063893d20e81161007f578063be2693f011610059578063be2693f014610263578063d7b4750c1461026d578063dba6335f146102aa578063f8b2cb4f146102d5576100d5565b8063893d20e8146102035780639e87a5cd1461022e578063b60d428814610259576100d5565b80630343fb25146100df5780630ec3b0271461011c5780631bf6132d146101475780633ccfd60b1461018457806354861af71461019b5780636b69a592146101d8576100d5565b366100d5576100d3610312565b005b6100dd610312565b005b3480156100eb57600080fd5b5061010660048036038101906101019190610cd7565b61044b565b6040516101139190610d1d565b60405180910390f35b34801561012857600080fd5b50610131610494565b60405161013e9190610d97565b60405180910390f35b34801561015357600080fd5b5061016e60048036038101906101699190610cd7565b6104ba565b60405161017b9190610d1d565b60405180910390f35b34801561019057600080fd5b506101996104d2565b005b3480156101a757600080fd5b506101c260048036038101906101bd9190610dde565b610713565b6040516101cf9190610e1a565b60405180910390f35b3480156101e457600080fd5b506101ed610752565b6040516101fa9190610d1d565b60405180910390f35b34801561020f57600080fd5b50610218610758565b6040516102259190610e1a565b60405180910390f35b34801561023a57600080fd5b50610243610780565b6040516102509190610d97565b60405180910390f35b610261610312565b005b61026b6107aa565b005b34801561027957600080fd5b50610294600480360381019061028f9190610dde565b610a39565b6040516102a19190610e1a565b60405180910390f35b3480156102b657600080fd5b506102bf610a81565b6040516102cc9190610e1a565b60405180910390f35b3480156102e157600080fd5b506102fc60048036038101906102f79190610cd7565b610aa5565b6040516103099190610d1d565b60405180910390f35b670de0b6b3a7640000610350600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1634610aee90919063ffffffff16565b11610390576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038790610e92565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104429190610ee1565b92505081905550565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610557576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156106035760006001828154811061057d5761057c610f37565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806105fb90610f66565b91505061055a565b50600067ffffffffffffffff81111561061f5761061e610faf565b5b60405190808252806020026020018201604052801561064d5781602001602082028036833780820191505090505b5060019080519060200190610663929190610bcd565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161068a9061100f565b60006040518083038185875af1925050503d80600081146106c7576040519150601f19603f3d011682016040523d82523d6000602084013e6106cc565b606091505b5050905080610710576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070790611070565b60405180910390fd5b50565b6001818154811061072357600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60005481565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461082f576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156108b357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610869575b5050505050905060005b815181101561093e5760008282815181106108db576108da610f37565b5b602002602001015190506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061093690610f66565b9150506108bd565b50600067ffffffffffffffff81111561095a57610959610faf565b5b6040519080825280602002602001820160405280156109885781602001602082028036833780820191505090505b506001908051906020019061099e929190610bcd565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516109e59061100f565b60006040518083038185875af1925050503d8060008114610a22576040519150601f19603f3d011682016040523d82523d6000602084013e610a27565b606091505b5050905080610a3557600080fd5b5050565b600060018281548110610a4f57610a4e610f37565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600080610afa83610b2a565b90506000670de0b6b3a76400008583610b139190611090565b610b1d9190611119565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610b7357600080fd5b505afa158015610b87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bab91906111d7565b505050915050670de0b6b3a764000081610bc59190611252565b915050919050565b828054828255906000526020600020908101928215610c46579160200282015b82811115610c455782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610bed565b5b509050610c539190610c57565b5090565b5b80821115610c70576000816000905550600101610c58565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ca482610c79565b9050919050565b610cb481610c99565b8114610cbf57600080fd5b50565b600081359050610cd181610cab565b92915050565b600060208284031215610ced57610cec610c74565b5b6000610cfb84828501610cc2565b91505092915050565b6000819050919050565b610d1781610d04565b82525050565b6000602082019050610d326000830184610d0e565b92915050565b6000819050919050565b6000610d5d610d58610d5384610c79565b610d38565b610c79565b9050919050565b6000610d6f82610d42565b9050919050565b6000610d8182610d64565b9050919050565b610d9181610d76565b82525050565b6000602082019050610dac6000830184610d88565b92915050565b610dbb81610d04565b8114610dc657600080fd5b50565b600081359050610dd881610db2565b92915050565b600060208284031215610df457610df3610c74565b5b6000610e0284828501610dc9565b91505092915050565b610e1481610c99565b82525050565b6000602082019050610e2f6000830184610e0b565b92915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567682000000000000000000000000000600082015250565b6000610e7c601383610e35565b9150610e8782610e46565b602082019050919050565b60006020820190508181036000830152610eab81610e6f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610eec82610d04565b9150610ef783610d04565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610f2c57610f2b610eb2565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610f7182610d04565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610fa457610fa3610eb2565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610ff9600083610fde565b915061100482610fe9565b600082019050919050565b600061101a82610fec565b9150819050919050565b7f63616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b600061105a600b83610e35565b915061106582611024565b602082019050919050565b600060208201905081810360008301526110898161104d565b9050919050565b600061109b82610d04565b91506110a683610d04565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156110df576110de610eb2565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061112482610d04565b915061112f83610d04565b92508261113f5761113e6110ea565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b6111698161114a565b811461117457600080fd5b50565b60008151905061118681611160565b92915050565b6000819050919050565b61119f8161118c565b81146111aa57600080fd5b50565b6000815190506111bc81611196565b92915050565b6000815190506111d181610db2565b92915050565b600080600080600060a086880312156111f3576111f2610c74565b5b600061120188828901611177565b9550506020611212888289016111ad565b9450506040611223888289016111c2565b9350506060611234888289016111c2565b925050608061124588828901611177565b9150509295509295909350565b600061125d8261118c565b91506112688361118c565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156112a7576112a6610eb2565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156112e4576112e3610eb2565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561132157611320610eb2565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561135e5761135d610eb2565b5b82820290509291505056fea2646970667358221220a53e0c122a3218b7c04a815e7b21523afcdb69d852adbddbf6a16fbda20ab3c764736f6c63430008080033",
  "devdoc": {
    "author": "jopaleti",
    "details": "This implements price feed as our library",
    "kind": "dev",
    "methods": {
      "fund()": {
        "details": "This implements price feeds as our library"
      },
      "getAddressToAmountFunded(address)": {
        "params": {
          "fundingAddress": "the address of the funder"
        },
        "returns": {
          "_0": "the amount funded"
        }
      }
    },
    "title": "A contract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "fund()": {
        "notice": "This function funds this contract"
      },
      "getAddressToAmountFunded(address)": {
        "notice": "Gets the amount that an address has funded"
      }
    },
    "notice": "This contract is to demo a sample funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 325,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "MINIMUM_USD",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 328,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 332,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 337,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)104"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)104": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}